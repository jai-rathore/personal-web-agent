package feedback

import (
	"context"
	"fmt"
	"net/smtp"
	"strings"
	"time"

	"github.com/jrathore/personal-web-agent/api/internal/config"
	"github.com/jrathore/personal-web-agent/api/internal/types"
	"github.com/rs/zerolog/log"
)

// SMTPEmailService implements EmailService using SMTP
type SMTPEmailService struct {
	config *config.Config
}

// NewSMTPEmailService creates a new SMTP email service
func NewSMTPEmailService(cfg *config.Config) *SMTPEmailService {
	return &SMTPEmailService{
		config: cfg,
	}
}

// SendFeedbackEmail sends a feedback notification email to Jai
func (s *SMTPEmailService) SendFeedbackEmail(ctx context.Context, feedback *types.FeedbackRequest) error {
	// Skip if email is not configured
	if s.config.SMTPHost == "" || s.config.SMTPPort == "" {
		log.Info().Msg("SMTP not configured, skipping email notification")
		return nil
	}

	// Build email content
	subject := "New Website Feedback from jairathore.com"

	body := s.buildEmailBody(feedback) // Prepare email message
	from := s.config.SMTPFromEmail
	to := s.config.FeedbackEmail

	message := fmt.Sprintf(`From: %s
To: %s
Subject: %s
MIME-Version: 1.0
Content-Type: text/html; charset=UTF-8

%s`, from, to, subject, body)

	// Send email
	auth := smtp.PlainAuth("", s.config.SMTPUsername, s.config.SMTPPassword, s.config.SMTPHost)
	addr := fmt.Sprintf("%s:%s", s.config.SMTPHost, s.config.SMTPPort)

	err := smtp.SendMail(addr, auth, from, []string{to}, []byte(message))
	if err != nil {
		return fmt.Errorf("failed to send email: %w", err)
	}

	log.Info().
		Str("to", to).
		Msg("Feedback email sent successfully")

	return nil
}

// buildEmailBody creates the HTML email body
func (s *SMTPEmailService) buildEmailBody(feedback *types.FeedbackRequest) string {
	contactInfo := ""
	if feedback.Name != "" || feedback.Email != "" {
		contactInfo = "<h3>Contact Information</h3>"
		if feedback.Name != "" {
			contactInfo += fmt.Sprintf("<p><strong>Name:</strong> %s</p>", feedback.Name)
		}
		if feedback.Email != "" {
			contactInfo += fmt.Sprintf("<p><strong>Email:</strong> <a href=\"mailto:%s\">%s</a></p>", feedback.Email, feedback.Email)
		}
	}

	pageInfo := ""
	if feedback.Page != "" {
		pageInfo = fmt.Sprintf("<p><strong>Page:</strong> %s</p>", feedback.Page)
	}

	userAgentInfo := ""
	if feedback.UserAgent != "" {
		userAgentInfo = fmt.Sprintf("<p><strong>User Agent:</strong> <code>%s</code></p>", feedback.UserAgent)
	}

	return fmt.Sprintf(`
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>New Website Feedback</title>
    <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
        .container { max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px; }
        .message { 
            background: #fff; 
            border: 1px solid #dee2e6; 
            border-radius: 8px; 
            padding: 20px; 
            margin: 20px 0; 
        }
        .metadata { 
            background: #f8f9fa; 
            padding: 15px; 
            border-radius: 8px; 
            font-size: 14px; 
            color: #666; 
        }
        code { 
            background: #f1f3f4; 
            padding: 2px 4px; 
            border-radius: 3px; 
            font-size: 12px; 
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>ðŸ’¬ New Website Feedback</h1>
            <p>You've received new feedback on your personal web agent!</p>
        </div>
        
        <h2>Feedback Details</h2>
        <p><strong>Received:</strong> %s</p>
        
        <div class="message">
            <h3>ðŸ’¬ Message</h3>
            <p>%s</p>
        </div>
        
        %s
        
        <div class="metadata">
            <h3>ðŸ“Š Technical Details</h3>
            <p><strong>Timestamp:</strong> %s</p>
            %s
            %s
        </div>
        
        <hr style="margin: 30px 0; border: none; border-top: 1px solid #dee2e6;">
        <p style="text-align: center; color: #666; font-size: 14px;">
            This email was automatically generated by your personal web agent.<br>
            Visit <a href="https://jairathore.com">jairathore.com</a> to see your website.
        </p>
    </div>
</body>
</html>`,
		feedback.Timestamp.Format("Monday, January 2, 2006 at 3:04 PM MST"),
		strings.ReplaceAll(feedback.Message, "\n", "<br>"),
		contactInfo,
		feedback.Timestamp.Format(time.RFC3339),
		pageInfo,
		userAgentInfo,
	)
}
